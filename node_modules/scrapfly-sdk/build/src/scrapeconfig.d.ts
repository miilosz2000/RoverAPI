import { Rec, HttpMethod } from './types.js';
export declare class ScrapeConfig {
    static PUBLIC_DATACENTER_POOL: string;
    static PUBLIC_RESIDENTIAL_POOL: string;
    url: string;
    retry: boolean;
    method: HttpMethod;
    country?: string;
    render_js: boolean;
    cache: boolean;
    cache_clear: boolean;
    cost_budget?: number;
    ssl: boolean;
    dns: boolean;
    asp: boolean;
    debug: boolean;
    raise_on_upstream_error: boolean;
    cache_ttl?: number;
    proxy_pool?: string;
    session?: string;
    tags: Set<string>;
    correlation_id?: string;
    cookies?: Rec<string>;
    body?: string;
    data?: Rec<any>;
    headers?: Rec<string>;
    js?: string;
    rendering_wait?: number;
    wait_for_selector?: string;
    session_sticky_proxy: boolean;
    screenshots?: Rec<any>;
    webhook?: string;
    timeout?: number;
    js_scenario?: Rec<any>;
    extract?: Rec<any>;
    lang?: string[];
    os?: string;
    auto_scroll?: boolean;
    constructor(options: {
        url: string;
        retry?: boolean;
        method?: HttpMethod;
        country?: string;
        render_js?: boolean;
        cache?: boolean;
        cache_clear?: boolean;
        cost_budget?: number;
        ssl?: boolean;
        dns?: boolean;
        asp?: boolean;
        debug?: boolean;
        raise_on_upstream_error?: boolean;
        cache_ttl?: number;
        proxy_pool?: string;
        session?: string;
        tags?: Array<string>;
        correlation_id?: string;
        cookies?: Rec<string>;
        body?: string;
        data?: Rec<any>;
        headers?: Rec<string>;
        js?: string;
        rendering_wait?: number;
        wait_for_selector?: string;
        screenshots?: Rec<any>;
        session_sticky_proxy?: boolean;
        webhook?: string;
        timeout?: number;
        js_scenario?: Rec<any>;
        extract?: Rec<any>;
        os?: string;
        lang?: string[];
        auto_scroll?: boolean;
    });
    toApiParams(options: {
        key: string;
    }): Record<string, any>;
}
